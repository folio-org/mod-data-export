server:
  port: 8081
spring:
  application:
    name: @project.artifactId@
    version: @project.version@
  servlet:
    multipart:
      max-file-size: 10MB
  datasource:
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_DATABASE:db}
  sql:
    init:
      # to boot up application despite of any DB connection issues
      continue-on-error: true
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        enable_lazy_load_no_trans: true
    show-sql: false
  liquibase:
    enabled: true
    change-log: classpath:db/changelog/changelog-master.xml
  jackson:
    default-property-inclusion: non_null
    deserialization:
      fail-on-unknown-properties: false
      accept-single-value-as-array: true
  cloud:
    openfeign:
      okhttp:
        enabled: true
      client:
        config:
          default:
            connectTimeout: 600000
            readTimeout: 3600000
  mustache:
    check-template-location: false
folio:
  tenant:
    validation:
      enabled: true
management:
  endpoints:
    web:
      exposure:
        include: info,health,env,httptrace
      base-path: /admin
  #  endpoint:
  #    health:
  #      show-details: always
  #      show-components: always
  ###################################################
  # Disable all checks except for readiness
  ###################################################
  health:
    defaults:
      enabled: false
    readinessstate:
      enabled: true
debug: false
application:
  wait-search-ids-time: ${WAIT_SEARCH_IDS_TIME:10800}
  export-ids-batch: ${EXPORT_IDS_BATCH:1000}
  export-files:
    max-pool-size: ${EXPORT_FILES_MAX_POOL_SIZE:5}
  export-tmp-storage: ${EXPORT_TMP_STORAGE:}
  remote-files-storage:
    endpoint: ${S3_URL:http://localhost:9000/}
    region: ${S3_REGION:}
    bucket: ${S3_BUCKET:}
    accessKey: ${S3_ACCESS_KEY_ID:}
    secretKey: ${S3_SECRET_ACCESS_KEY:}
    awsSdk: ${S3_IS_AWS:false}
  file-uploading:
    max-retry-count: ${MAX_UPLOADING_RETRIES:5000}
  clean-up-files-delay: ${CLEAN_UP_FILES_DELAY:}
